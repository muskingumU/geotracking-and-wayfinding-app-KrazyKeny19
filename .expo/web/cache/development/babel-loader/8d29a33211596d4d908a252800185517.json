{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Pig_p\\\\Desktop\\\\School\\\\ReactNativeProjects\\\\MapProject\\\\currentLocation.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport * as Location from 'expo-location';\n\nvar cLocation = function cLocation(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, text));\n};","map":{"version":3,"sources":["C:/Users/Pig_p/Desktop/School/ReactNativeProjects/MapProject/currentLocation.js"],"names":["React","TouchableOpacity","Location","cLocation","navigation","useState","location","setLocation","errorMsg","setErrorMsg","useEffect","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","text","JSON","stringify","styles","container","paragraph"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAC/B,kBAAgCC,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCF,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGwBR,QAAQ,CAACS,iCAAT,EAHxB;;AAAA;AAAA;AAGOC,cAAAA,MAHP,yBAGOA,MAHP;;AAAA,oBAIKA,MAAM,KAAK,SAJhB;AAAA;AAAA;AAAA;;AAKGH,cAAAA,WAAW,CAAC,0CAAD,CAAX;AALH;;AAAA;AAAA;AAAA,+CASsBP,QAAQ,CAACW,uBAAT,CAAiC,EAAjC,CATtB;;AAAA;AASKP,cAAAA,QATL;AAUCC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAYD,GAbM,EAaJ,EAbI,CAAT;AAeE,MAAIQ,IAAI,GAAG,WAAX;;AACA,MAAIN,QAAJ,EAAc;AACZM,IAAAA,IAAI,GAAGN,QAAP;AACD,GAFD,MAEO,IAAIF,QAAJ,EAAc;AACnBQ,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCL,IAAhC,CADF,CADF;AAKL,CA/BD","sourcesContent":["import React from 'react';\r\nimport { View, Image, StyleSheet, Dimensions, Button} from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport * as Location from 'expo-location';\r\n\r\nconst cLocation = ({navigation}) =>{\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n          // Asks the user to grant permissions for geolocation\r\n          // while the app is in the foreground.\r\n          let { status } = await Location.requestForegroundPermissionsAsync();\r\n          if (status !== 'granted') {\r\n            setErrorMsg('Permission to access location was denied');\r\n            return;\r\n          }\r\n    \r\n          let location = await Location.getCurrentPositionAsync({});\r\n          setLocation(location); // refresh UI\r\n        })();// need () before ; a mystery.\r\n      }, []); // end of useEffect. array of props optional.\r\n    \r\n      let text = 'Waiting..';\r\n      if (errorMsg) {\r\n        text = errorMsg;\r\n      } else if (location) {\r\n        text = JSON.stringify(location);\r\n      }\r\n    \r\n      return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.paragraph}>{text}</Text>\r\n        </View>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}